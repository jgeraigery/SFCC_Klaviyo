<isscript>
    var klaviyoUtils = require('*/cartridge/scripts/utils/klaviyo/klaviyoUtils.js');
</isscript>
<!--- TEMPLATENAME: klaviyoTag.isml --->
<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('klaviyo_enabled')}">
    <script async src="//static.klaviyo.com/onsite/js/klaviyo.js?company_id=${dw.system.Site.getCurrent().preferences.custom.klaviyo_account}"></script>
    <script>
        // klaviyo object loader - provided by klaviyo
        !function(){if(!window.klaviyo){window._klOnsite=window._klOnsite||[];try{window.klaviyo=new Proxy({},{get:function(n,i){return"push"===i?function(){var n;(n=window._klOnsite).push.apply(n,arguments)}:function(){for(var n=arguments.length,o=new Array(n),w=0;w<n;w++)o[w]=arguments[w];var t="function"==typeof o[o.length-1]?o.pop():void 0,e=new Promise((function(n){window._klOnsite.push([i].concat(o,[function(i){t&&t(i),n(i)}]))}));return e}}})}catch(n){window.klaviyo=window.klaviyo||[],window.klaviyo.push=function(){var n;(n=window._klOnsite).push.apply(n,arguments)}}}}();
    </script>
    <isif condition="${pageContext.type == 'product' || pageContext.type == 'search'}">
        <isif condition="${pageContext.type == 'product'}">
            <isset name="klAction" value="${klaviyoUtils.EVENT_NAMES.viewedProduct}" scope="page" />
            <isset name="klParms" value="${pdict.Product.ID}" scope="page" />
        <iselse>
            <isif condition="${request.httpParameterMap.cgid.stringValue != ''}">
                <isset name="klAction" value="${klaviyoUtils.EVENT_NAMES.viewedCategory}" scope="page" />
                <isset name="klParms" value="${request.httpParameterMap.cgid.stringValue}" scope="page" />
            <iselse>
                <isset name="klAction" value="${klaviyoUtils.EVENT_NAMES.searchedSite}" scope="page" />
                <isset name="klParms" value="${request.httpParameterMap.q.stringValue + '|' + pdict.ProductSearchResult.count}" scope="page" />
            </isif>
        </isif>
        <isinclude url="${URLUtils.url('Klaviyo-Event', 'action', klAction, 'parms', klParms)}" />
    </isif>
    <isif condition="${pdict.klid}">
        <isinclude template="klaviyo/klaviyoID" />
    </isif>
    <isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('klaviyo_email_selectors')}">

        <script>
            var klaviyoJS = {};
            klaviyoJS.emailFieldSelectors = <isprint value="${JSON.stringify(dw.system.Site.current.preferences.custom.klaviyo_email_selectors)}" encoding="off" />;
            klaviyoJS.sfccEmailRegex = new RegExp(/^[\w.%+-]+@[\w.-]+\.[\w]{2,6}$/);
            klaviyoJS.getExchangeID = function () {
                var klaviyoCookie = document.cookie.split('; ').filter(function(c) {return /__kla_id=/.test(c)});
                return JSON.parse(atob(klaviyoCookie[0].split("__kla_id=")[1])).$exchange_id;
            };
            Promise.resolve(klaviyo.isIdentified()).then((result) => { klaviyoJS.identifiedUser = result });
             // TODO: debugging only, remove this console.log()
            console.log(" ====  klaviyoJS OBJ  ==== ", klaviyoJS);

            for (let i = 0; i < klaviyoJS.emailFieldSelectors.length; i++) {
                let selectedInput = $(klaviyoJS.emailFieldSelectors[i]);
                if (selectedInput) {
                    let klavInput = selectedInput[0];
                    if (klavInput && !klavInput.klaviyoListener) {
                        selectedInput.attr("data-listener", 'klaviyo');  // Add this attribute to DOM to visually inspect where email listeners were applied
                        selectedInput.change(function(){
                            if (klavInput.pattern && klavInput.value.match(klavInput.pattern)) {
                                // TODO: debugging only, remove this console.log()
                                console.log('VALID EMAIL: PASSED REGEX');
                                if (!klaviyoJS.identifiedUser) {
                                    klaviyo.identify({ '$email' : klavInput.value }).then(() => { klaviyoJS.identifiedUser = true; klaviyoJS.exchangeID = klaviyoJS.getExchangeID(); });
                                }
                            } else {
                                 // TODO: debugging only, remove this console.log()
                                console.log('=== UNSURE === | NO REGEX CHECK.');
                                if (!klaviyoJS.identifiedUser && klaviyoJS.sfccEmailRegex.test( klavInput.value )) {
                                    // TODO: debugging only, remove this console.log()
                                    console.log('REGEX APPLIED. Email is Good: ', klaviyoJS.sfccEmailRegex.test(klavInput.value));
                                    klaviyo.identify({ '$email' : klavInput.value }).then(() => { klaviyoJS.identifiedUser = true; klaviyoJS.exchangeID = klaviyoJS.getExchangeID(); });
                                }
                            }
                            // TODO: debugging only, remove this console.log()
                            console.log(' >>>> klaviyoJS OBJ AFTER CHANGE >>>> ', klaviyoJS);
                        });
                    }
                }
            }
        </script>
    </isif>
</isif>
